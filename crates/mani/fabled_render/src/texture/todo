//todo Maybe add compression features.

//todo figure out the file layout for texture.
//todo maybe add a file for file extension for image support file.
//todo support dxt compression (DXT1, DXT2, DXT5) maybe add support for other compression like BC1, BC2, BC3, BC5, BC7, ATC, FXT1, PVRTC2, EAC_R, EAC_RG
//todo support image post processing such
//todo maybe add texture synthesiser.
//todo add snapshot that save the current texture metadata such as pixel data (color), since i'm not abstracting.
//todo generate mipmap with override support?
//todo anti aliasing?
//todo allow texture conversion.
// Everything is exposed to the developer but the only abstraction will be the snapshot so the developer can fall back to
// Texture when the modified the current texture. There will also be a "trailing" feature which will have the basically an undo and redo system.
// does stencil texture go in texture module ????
// does depth texture go in texture module ????
// add a texture queue? where it will store all the texture loaded. if the same texture is loaded that in cache it will get the cache.
// the cache will use a lru style where the front will be the most recently used and the last will be the least recently used if the cache line
// is full then the least recently used will be evicted from the cache line for the texture that is loading. I might change the collection algorithm
// still got to research about it.
// cubemap format???? (CubeMap_format_1x6, CubeMap_format_2x3, CubeMap_Format_3x2,CubeMap_Format_6x1)
// CompressionMode??? (Lossless, Lossy, Vram Compressed, Vram Uncompressed, Basis Universal)
// Detects Mipmap, 3D, Normal, Roughness?
// Detects Format Image, Png, WEBP, Basic universal?
// Add texture Filter (Linear, Point, Anisotropic, LinearMipPoint, PointMipLinear, MinLinearPointMipLinear, MinLinearMagPointMipPoint, MinPointMagLinearMipLinear, MipPointMagLinearMipPoint)
// Texture flag such as NoMipMap, ForceMipMap??
// Add Texture Atlas??

// Sol will have an abstracted texture loader that will load the texture depending on the extension file.
// This will mean all the function from the codecs loader must return the same return types.