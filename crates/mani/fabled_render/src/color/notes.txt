Personal notes.

The color grading will be using ACES. ACES has four different type of space we will be using (excluding ACESProxy).
Color grading will be done using the ACEScc or ACEScct depending on preference. ACEScct and ACEScc both use log space,
so we will not need to have a function that will convert a color from linear space to log space and from log space to linear.

Note that for color grading we will need to convert ACES2025 and/or ACEScg to ACEScc or ACEScct depending on preference.

Watching da vinci color tutorial it look like it does contrast in log space.


srgb to ACES-2025 -> ACES2025 to log (cc or cct) -> cdl (color decision list) -> contrast -> log (cc or cct) to ACES2025

--------------------------------- ASC CDL -----------------------------------------

for cdl refer to https://en.wikipedia.org/wiki/ASC_CDL

formula = output = (i x s + o) ^ p

where i is the input pixel
      s is the slope
      o is the offset
      p is the power



--------------------------------- White Balancing -----------------------------------------

chromatic adaptation, or color constancy; when the correction occurs in a camera it is referred to as white balance
(https://en.wikipedia.org/wiki/Chromatic_adaptation#:~:text=This%20feature%20of%20the%20visual,referred%20to%20as%20white%20balance.)

If chromatic adaptation is white balancing when applied to the camera then we should support chromatic adaptation (white balance)
to different color space not just srgb.

We will need to get rid of passing srgb and use a universal color space (tri_stimulus values).

It will be the job of the system to convert the color space to tri_stimulus value.
The only question with this idea is that how will it know which color space it is in to do the conversion.



