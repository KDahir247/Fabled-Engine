// ----------------------- These are function that are on hold for implementation -----------
   Correct Uv mapping due to squashing uv from 0.9 to 0.1 from 0.9, 0.8, 0.7 .... 0.1
   Which give it a squashed zig on the uv of the ico sphere.

    fn detect_wrapped_uv(mesh: &Mesh) -> Vec<usize> {
        let mut indices = Vec::new();

        for index in 0..(mesh.indices.len() / 3) {
            let a = mesh.indices[index * 3];
            let b = mesh.indices[index * 3 + 1];
            let c = mesh.indices[index * 3 + 2];

            let tex_a = glam::Vec2::from_slice(&mesh.vertices[a].tex_coord).extend(0.0);
            let tex_b = glam::Vec2::from_slice(&mesh.vertices[b].tex_coord).extend(0.0);
            let tex_c = glam::Vec2::from_slice(&mesh.vertices[c].tex_coord).extend(0.0);

            let tex_normal = (tex_b - tex_a).cross(tex_c - tex_a);

            if tex_normal.z < 0.0 {
                {
                    indices.push(index);
                }
            }
        }

        indices
    }

    let uv = self::IcoSphere::detect_wrapped_uv(&mesh);