Research about lighting for game engine.


Luminous Flux is the total amout of visual power emitted by a light source.

// Calculating the Light intensity for a Point light
// Luminous Intensity is using candela for it's measurement which is equalivent to lumen per steradian
Luminous Intensity (Intensity) = Luminous Flux  / 4 * PI


// Illuminance is the total luminous flux incident on a surface, per unit area.
// Illuminance is using lux for it's measuremenet.
// Spherical surface radius is equalivent to the radius of the point light.
Illuminance = luminous Flux / 4 * PI * spherical surface radius * spherical surface radius


// The physically correct illuminance at the distance.
// Where D is the distance from each point on a surface being shaded from the light position.
D = ||light position - point position||
Illuminance D = Luminous Intensity (Intensity) / D * D
Which can be re-written as
Illuminance D = (Luminous Flux / 4 * PI) / ||light position - point position|| * ||light position - point position||
Illuminance D = (Luminous Flux / 4 * PI) / distance falloff function (D)

List of some distance falloff function
1) Inverse Square attenuation function
2) Exponential Attenuation function
3) Smoothing Attenuation function


Calculate the light attenuation in the fragment shader.
We can then get the illuminance from the.

punctual lights,
1) Directional light,
2) Spot Light
3) Point Light,

photometric lights,
1) IES profile,
2) EULUMDAT profile

area lights,

emissive surfaces,

image based lights (IBLs)

spectral renderer (i.e. a renderer which uses spectral values instead of a RGB triplet to represent
color)

Legend
   v view vector
   l incident light vector
   n normal
   h half vector
   L lighting function
   f BRDF
   fd diffuse component of a BRDF
   fr specular component of a BRDF
   α material roughness
   αlin perceptually linear material roughness
   · dot product
   h · i clamped dot product
   | · | absolute value of the dot product
   ρ diffuse reflectance
   χ
   +(a) Heaviside function: 1 if a > 0 and 0 if a <= 0
