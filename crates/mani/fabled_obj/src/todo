Set up folder structure

obj file data to support.

Create a clean way to load both obj and mtl file separately and try to
not make either of them depend on another

Create a async way to load obj and mtl file separately and try to
not make either fo them depend on another

    Basic Parameters
-------------------------
V = vertices data (x, y, z, [w])
vt = texture coordinate data ( x, y, [z])
vn = vertex normal data (x, y, z)
vp = parameter space vertex (u , [v], [w])
f = polygonal face element
l = line element

mtl file data to support.

    Basic Parameter
-------------------------
Ka = ambient color
kd = diffuse color


    Texture maps
-------------------------
map_Ka = ambient texture
map_Kd = diffuse texture
map_Ks = specular color texture
map_Ns = specular highlight texture - todo
map_d = alpha texture
bump = bump map (uses luminance channel of the image)
disp = displacement map - todo
decal = stencil decal texture - todo
refl = reflection map - todo

might allow texture map data to support texture option
for example

map_Ka -o 1 1 1 my_texture.png (texture origin (1,1,1))

    Texture Options
-------------------------
- blendu on | off  = set horizontal texture blending (-blendu on)
- blendv on | off  = set vertical texture blending (-blendv off)
- boost float_value = boost mip-map sharpness
- o u v w = origin offset (-o 0 0 0)
- s u v w = scale (-s 1 1 1)
- t u v w = turbulence (-t 0 0 0) probably not necessary

// reflection options
- type sphere = reflection map is spherical
- type cube_top | cube_bottom | cube_front | cube_back | cube_left | cube_right = reflection map is cubic and is for the designated face


    Physically Based Rendering
-----------------------------------
map_Pr = roughness texture //ok
map_Pm = metallic texture //ok
map_Ps = sheen texture //ok will be an option.
Pc = clearcoat thickness //ok
Pcr = clearcoat roughness //ok
map_Ke = emissive texture // ok
aniso = anisotropy //ok
anisor = anisotropy rotation // ok
norm = normal map (RGB components represent XYZ components of the surface normal) // ok
ior // ok
cut-out texture // ok
occlusion map  == ambient occlusion map // ok

    Extra
-------------------------
map_RMA = RMA material (R == Roughness, G == Metallic, B == Ambient Occlusion)


Re-look at Standard in the material module.
should i make the material color a [f32; 4] or should it be a [f32; 3]